interface Door {
    void install();
}

class WoodenDoor implements Door {
    @Override
    public void install() {
        System.out.println("Wooden door installed by Carpenter.");
    }
}

class SteelDoor implements Door {
    @Override
    public void install() {
        System.out.println("Steel door installed by Welder.");
    }
}

class PlasticDoor implements Door {
    @Override
    public void install() {
        System.out.println("Plastic door installed by PVCSpecialist.");
    }
}

abstract class DoorFactory {
    abstract Door createDoor(String type);
}

class WoodenDoorFactory extends DoorFactory {
    @Override
    Door createDoor(String type) {
        return new WoodenDoor();
    }
}

class SteelDoorFactory extends DoorFactory {
    @Override
    Door createDoor(String type) {
        return new SteelDoor();
    }
}

class PlasticDoorFactory extends DoorFactory {
    @Override
    Door createDoor(String type) {
        return new PlasticDoor();
    }
}

class Carpenter {
    public void installWoodenDoor(WoodenDoor door) {
        door.install();
    }
}

class Welder {
    public void installSteelDoor(SteelDoor door) {
        door.install();
    }
}

class PVCSpecialist {
    public void installPlasticDoor(PlasticDoor door) {
        door.install();
    }
}

public class Main {
    public static void main(String[] args) {
        DoorFactory factory = new WoodenDoorFactory();
        Door door = factory.createDoor("wooden");
        door.install(); 

        factory = new SteelDoorFactory();
        door = factory.createDoor("steel");
        door.install();

        factory = new PlasticDoorFactory();
        door = factory.createDoor("plastic");
        door.install();
    }
}
